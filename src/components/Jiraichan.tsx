/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { FC, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
	nodes: {
		shirt: THREE.Mesh;
		Body: THREE.SkinnedMesh;
		Face: THREE.SkinnedMesh;
		Hair: THREE.SkinnedMesh;
		Mask: THREE.SkinnedMesh;
		Nekomimi: THREE.SkinnedMesh;
		Shoes: THREE.SkinnedMesh;
		Twintail: THREE.SkinnedMesh;
		sleeve: THREE.Mesh;
		choker: THREE.Mesh;
		Skirt: THREE.Mesh;
		waist: THREE.Mesh;
		Cylinder: THREE.Mesh;
		ribbon: THREE.Mesh;
		suspender: THREE.Mesh;
		skirt_accessory: THREE.Mesh;
		shirt_botton_base: THREE.Mesh;
		NurbsPath: THREE.Mesh;
		Cylinder001: THREE.Mesh;
		spine: THREE.Bone;
		Bone: THREE.Bone;
		neutral_bone: THREE.Bone;
		neutral_bone_1: THREE.Bone;
		neutral_bone_2: THREE.Bone;
		neutral_bone_3: THREE.Bone;
		neutral_bone_4: THREE.Bone;
		neutral_bone_5: THREE.Bone;
		neutral_bone_6: THREE.Bone;
	};
	materials: {
		Clothes_necomimi: THREE.MeshBasicMaterial;
		Body_necomimi: THREE.MeshBasicMaterial;
		Face_necomimi: THREE.MeshBasicMaterial;
		Hair_necomimi: THREE.MeshBasicMaterial;
		Face_Items_necomimi: THREE.MeshBasicMaterial;
	};
};

type JiraichanProps = JSX.IntrinsicElements["group"];

const Jiraichan: FC<JiraichanProps> = (props) => {
	const { nodes, materials } = useGLTF(
		"/Jiraichan.glb",
	) as unknown as GLTFResult;
	return (
		<group {...props} dispose={null} scale={[1, 1, 1]}>
			<group scale={4.29}>
				<primitive object={nodes.spine} />
				<primitive object={nodes.Bone} />
				<primitive object={nodes.neutral_bone} />
				<primitive object={nodes.neutral_bone_1} />
				<primitive object={nodes.neutral_bone_2} />
				<primitive object={nodes.neutral_bone_3} />
				<primitive object={nodes.neutral_bone_4} />
				<primitive object={nodes.neutral_bone_5} />
				<primitive object={nodes.neutral_bone_6} />
				<mesh
					castShadow
					receiveShadow
					geometry={nodes.shirt.geometry}
					material={materials.Clothes_necomimi}
					scale={0.09}
				/>
				<skinnedMesh geometry={nodes.Body.geometry} material={materials.Body_necomimi} skeleton={nodes.Body.skeleton} material-color={"rgb(255, 212, 212)"} />
				<skinnedMesh geometry={nodes.Face.geometry} material={materials.Face_necomimi} skeleton={nodes.Face.skeleton} material-color={"rgb(255, 210, 210)"} />
				<skinnedMesh geometry={nodes.Hair.geometry} material={materials.Hair_necomimi} skeleton={nodes.Hair.skeleton} material-color={"rgb(255, 155, 226)"} />
				<skinnedMesh geometry={nodes.Mask.geometry} material={materials.Face_Items_necomimi} skeleton={nodes.Mask.skeleton} material-color={"rgb(72, 54, 54)"} />
				<skinnedMesh geometry={nodes.Nekomimi.geometry} material={materials.Face_Items_necomimi} skeleton={nodes.Nekomimi.skeleton} material-color={"rgb(0, 0, 0)"} />
				<skinnedMesh geometry={nodes.Shoes.geometry} material={materials.Clothes_necomimi} skeleton={nodes.Shoes.skeleton} material-color={"rgb(255, 255, 255)"} />
				<skinnedMesh
					geometry={nodes.Twintail.geometry}
					material={materials.Hair_necomimi}
					skeleton={nodes.Twintail.skeleton}
				/>
			</group>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.sleeve.geometry}
				material={materials.Clothes_necomimi}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.choker.geometry}
				material={nodes.choker.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Skirt.geometry}
				material={nodes.Skirt.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.waist.geometry}
				material={nodes.waist.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Cylinder.geometry}
				material={nodes.Cylinder.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.ribbon.geometry}
				material={nodes.ribbon.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.suspender.geometry}
				material={nodes.suspender.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.skirt_accessory.geometry}
				material={nodes.skirt_accessory.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.shirt_botton_base.geometry}
				material={nodes.shirt_botton_base.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.NurbsPath.geometry}
				material={nodes.NurbsPath.material}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Cylinder001.geometry}
				material={nodes.Cylinder001.material}
			/>
		</group>
	);
};

useGLTF.preload("/Jiraichan.glb");

export default Jiraichan;
